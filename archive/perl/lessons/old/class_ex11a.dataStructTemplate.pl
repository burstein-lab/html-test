use strict;
######################################
# Purpose: Extract gene annotations from a Genbank genomic
#          record and store in a complex data structure
# Parameters: Input file name
#

# open input file
if (scalar(@ARGV) != 1) {die "USAGE: class_ex.pl INPUT_FILE\n";}
my $inFile = $ARGV[0];
open IN, $inFile or die "Can't open file '$inFile'\n";

######################################
# Read file and store gene data in a hashes of gene records
#
my $CDSs = 0;
my %genes;
my ($line, $name, $proteinId, $start, $end);
$line = <IN>;
while (defined($line)) {
	chomp $line;

	# Identify the first line about a gene - the "CDS" line
	# Extract coding sequences.	e.g.   CDS          3374..3808
	if ($line =~ m/???????????????????????/) {
		$CDSs++;

		# Get start and end of exon
		?????????????????????

		# Find "product" and "protein_id" lines
		while (defined($line = <IN>) && $line !~ m/^\s*CDS\s/) {
			# Extract product name.		e.g.   /product="IVa2"
			if ($line =~ m/????????????/) {
				??????????????;
			}
			# Extract protein IDs.		e.g.   /protein_id="AP_000116.1"
			if ($line =~ m/?????????????/) {
				???????????????;
			}
		}
		# Enter data into %genes
		??????????????????????????

	} else {
		# Check that the reg-exp didn't miss a "CDS" line
		if ($line =~ m/^\s*CDS/) { die "It looks like we missed a \"CDS\" line: '$line'"; }
		$line = <IN>;
	}
}

print "Found $CDSs CDSs\n";
print "Number of gene records: " . scalar(keys(%genes)) . "\n";

######################################
# Print names of genes
#
????????????????????????
????????????????????????
????????????????????????